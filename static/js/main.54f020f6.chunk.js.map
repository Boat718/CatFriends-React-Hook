{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/Time.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","website","rand","Math","floor","random","className","alt","src","CardList","cardArr","robots","map","e","id","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","Time","s","Date","toLocaleTimeString","useState","timee","setTime","useEffect","setTimeout","App","setRobots","searchfield","setSearchfied","fetch","responsedata","json","data","console","log","filteredRobot","filter","robot","toLowerCase","includes","length","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sBCSCQ,EAdF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAKC,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,QAClBC,EAAOC,KAAKC,MAAoB,IAAdD,KAAKE,UAC3B,OACI,sBAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAK,UAAUC,IAAG,+BAA0BN,EAA1B,eACvB,gCACI,6BAAKH,IACL,6BAAKC,IACL,6BAAKC,WCKNQ,EAZE,SAAC,GAAY,IACpBC,EADmB,EAAVC,OACQC,KAAI,SAACC,GAExB,OAAO,cAAC,EAAD,CAAmBd,KAAQc,EAAEd,KAAMC,MAASa,EAAEb,MAAOC,QAAUY,EAAEZ,SAApDY,EAAEC,OAE1B,OACI,8BACKJ,KCCEK,EARG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKV,UAAY,MAAjB,SACA,uBAAOA,UAAY,uCAAuCW,KAAK,SAASC,YAAY,cAAcC,SAAUH,OCIrGI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACKJ,EAAMK,a,4BCiBJC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAKX,MAAMK,a,GAhBEQ,aCsBbC,EAtBF,WACX,IACMC,GADO,IAAIC,MACFC,qBACf,EAAyBC,mBAASH,GAAlC,mBAAOI,EAAP,KAAcC,EAAd,KAYA,OANAC,qBAAU,WACRC,YAAW,WACTF,EAAQL,KACP,QAIH,8BACE,6BAAKI,OC6CII,MAvDf,WAUE,MAA4BL,mBAAS,IAArC,mBAAO5B,EAAP,KAAekC,EAAf,KACA,EAAqCN,mBAAS,IAA9C,mBAAOO,EAAP,KAAoBC,EAApB,KAWAL,qBAAU,WACRM,MAAM,8CACHxD,MAAK,SAACyD,GAAD,OAAkBA,EAAaC,UACpC1D,MAAK,SAAC2D,GAAD,OAAUN,EAAUM,MAC5BC,QAAQC,IAAI,cACX,IAEH,IAIMC,EAAgB3C,EAAO4C,QAAO,SAACC,GACnC,OAAOA,EAAMzD,KAAK0D,cAAcC,SAASZ,EAAYW,kBAGvD,OAAKH,EAAcK,OAIf,sBAAKrD,UAAU,KAAf,UACE,8CACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAWU,aAfM,SAAC4C,GACtBb,EAAc,CAAED,YAAac,EAAMC,OAAOC,WAetC,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUnD,OAAQ2C,WATnB,0CCpCXS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B9E,M","file":"static/js/main.54f020f6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\n\r\nconst Card = ({name,email,website})=>{\r\n    let rand = Math.floor(Math.random()*100)\r\n    return(\r\n        <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt ='Robottt' src={`https://robohash.org/${rand}?set=set4`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <h3>{email}</h3>\r\n                <h4>{website}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots})=>{\r\n    const cardArr = robots.map((e)=>{\r\n\r\n        return <Card key = {e.id} name = {e.name} email = {e.email} website ={e.website} />\r\n    }) \r\n    return(\r\n        <div>\r\n            {cardArr}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    return(\r\n        <div className = 'pa2'>\r\n        <input className = 'tc dib br3 pa3 ma2 grow bw2 shadow-5' type='search' placeholder='search cats' onChange={searchChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll = (props)=>{\r\n    return(\r\n        <div style={{overflowY:'scroll', border:'4px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React,{Component} from 'react'\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooops, That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Time = () => {\r\n  const time = new Date();\r\n  const s = time.toLocaleTimeString();\r\n  const [timee, setTime] = useState(s);\r\n\r\n  //   setInterval(() => {\r\n  //     setTime(s);\r\n  //   }, 1000);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTime(s);\r\n    }, 1000);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3>{timee}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Time;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport { robots } from \"../robots\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport \"./App.css\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport Time from \"../components/Time\";\r\n\r\nfunction App() {\r\n  // constructor(){\r\n  //     super()\r\n  //     this.state = {\r\n  //         robots:[],\r\n  //         searchfield:''\r\n  //     }\r\n  //     console.log('cons')\r\n  // }\r\n\r\n  const [robots, setRobots] = useState([]);\r\n  const [searchfield, setSearchfied] = useState(\"\");\r\n\r\n  // componentDidMount(){\r\n  //     fetch('https://jsonplaceholder.typicode.com/users').then((responsedata)=>responsedata.json()).then((data)=> this.setState({robots:data}))\r\n  //     console.log('didmount')\r\n  // }\r\n\r\n  //   setTimeout(() => {\r\n  //     setTime(s);\r\n  //   }, 1000);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((responsedata) => responsedata.json())\r\n      .then((data) => setRobots(data));\r\n    console.log(\"didmount\");\r\n  }, []);\r\n\r\n  const onSearchChange = (event) => {\r\n    setSearchfied({ searchfield: event.target.value });\r\n  };\r\n\r\n  const filteredRobot = robots.filter((robot) => {\r\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n  });\r\n\r\n  if (!filteredRobot.length) {\r\n    return <h1>Loading</h1>;\r\n  } else {\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1> CatFriends </h1>\r\n        <Time />\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredRobot} />\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport App from './containers/App';\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}